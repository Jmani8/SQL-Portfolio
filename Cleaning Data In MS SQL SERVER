-- Cleaning Data in Microsoft SQL Server--


-- Standardize Data Format--

SELECT SaleDateConverted, CONVERT(Date,SaleDate)
FROM PortfolioProject.dbo.NashvilleHousing

--UPDATE QUERY DID NOT WORK, USED BELOW TO STANDARDIZE DATE FORMAT--
UPDATE PortfolioProject.dbo.NashvilleHousing
SET SaleDate= CONVERT(Date,SaleDate)
--UPDATE QUERY DID NOT WORK, USED BELOW TO STANDARDIZE DATE FORMAT--

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
ADD SaleDateConverted Date;

UPDATE PortfolioProject.dbo.NashvilleHousing
SET SaleDateConverted = CONVERT(Date, Saledate)


--Populate Property Address data--

SELECT *
FROM PortfolioProject.dbo.NashvilleHousing
WHERE PropertyAddress IS null
ORDER BY ParcelID

SELECT a.ParcelID, a.PropertyAddress,b.ParcelID,b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM PortfolioProject.dbo.NashvilleHousing a
JOIN PortfolioProject.dbo.NashvilleHousing b
	on a.parcelID=b.ParcelID
	AND a.[UniqueID] <> b.[UniqueID]
--WHERE a.PropertyAddress IS null

UPDATE a
SET PropertyAddress= ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM PortfolioProject.dbo.NashvilleHousing a
JOIN PortfolioProject.dbo.NashvilleHousing b
	on a.parcelID=b.ParcelID
	AND a.[UniqueID] <> b.[UniqueID]

--Splitting Address into Individual Columns (Address, City, State)--

SELECT PropertyAddress
FROM PortfolioProject.dbo.NashvilleHousing

SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', propertyaddress)-1) AS Address
,SUBSTRING(PropertyAddress, CHARINDEX(',', propertyaddress)+1, LEN(PropertyAddress)) as CITY
FROM PortfolioProject.dbo.NashvilleHousing

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
ADD PropertySplitAddress NVarchar(250);

UPDATE PortfolioProject.dbo.NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', propertyaddress)-1)

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
ADD PropertySplitCity NVarchar(250);

UPDATE PortfolioProject.dbo.NashvilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', propertyaddress)+1, LEN(PropertyAddress))

SELECT *
FROM PortfolioProject.dbo.NashvilleHousing

-- Splitting Owner Address--
SELECT Owneraddress
FROM PortfolioProject.dbo.NashvilleHousing

SELECT
PARSENAME (REPLACE(Owneraddress, ',','.'),3)
,PARSENAME (REPLACE(Owneraddress, ',','.'),2)
,PARSENAME (REPLACE(Owneraddress, ',','.'),1)
FROM PortfolioProject.dbo.NashvilleHousing

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
ADD OwnerSplitAddress NVarchar(250);

UPDATE PortfolioProject.dbo.NashvilleHousing
SET OwnerSplitAddress = PARSENAME (REPLACE(Owneraddress, ',','.'),3)

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
ADD OwnerSplitCity NVarchar(250);

UPDATE PortfolioProject.dbo.NashvilleHousing
SET OwnerSplitCity = PARSENAME (REPLACE(Owneraddress, ',','.'),2)

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
ADD OwnerSplitState NVarchar(250);

UPDATE PortfolioProject.dbo.NashvilleHousing
SET OwnerSplitState = PARSENAME (REPLACE(Owneraddress, ',','.'),1)


--Change Y and N to "Yes" and "No" in Sold as Vacant Field--

SELECT Distinct(Soldasvacant), Count(SoldasVacant)
FROM PortfolioProject.dbo.NashvilleHousing
GROUP BY SoldAsVacant
ORDER BY 2


SELECT SoldAsVacant
	,CASE WHEN Soldasvacant = 'Y' Then 'Yes'
		 WHEN Soldasvacant = 'N' Then 'No'
		 ELSE Soldasvacant
		 END
FROM PortfolioProject.dbo.NashvilleHousing

UPDATE PortfolioProject.dbo.NashvilleHousing
SET SoldAsVacant = CASE WHEN Soldasvacant = 'Y' Then 'Yes'
		 WHEN Soldasvacant = 'N' Then 'No'
		 ELSE Soldasvacant
		 END

--REMOVING Duplicates--

WITH RowNumCTE AS(
SELECT *,
	ROW_NUMBER() OVER(
	PARTITION BY ParcelID,
				PropertyAddress,
				SalePrice,
				SaleDate,
				LegalReference
				ORDER BY 
					UniqueID
					) row_num

FROM PortfolioProject.dbo.NashvilleHousing
--ORDER BY ParcelID
)
SELECT *
FROM RowNumCTE
WHERE row_num> 1
--ORDER BY PropertyAddress

--DELETE Unused Columns--

SELECT *
FROM PortfolioProject.dbo.NashvilleHousing

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
DROP COLUMN Saledate
